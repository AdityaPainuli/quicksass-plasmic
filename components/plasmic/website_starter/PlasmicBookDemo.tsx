// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: dxYrx5uQmGn6tBD3XVsY7V
// Component: 8KInyWSLUg2G

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Navbar from "../../Navbar"; // plasmic-import: egSkIv89EocE/component
import Button from "../../Button"; // plasmic-import: Xv3BLH31dEm6/component

import { useScreenVariants as useScreenVariantsxsFgrn3KpJ7Z } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: XsFgrn3kpJ7z/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: dxYrx5uQmGn6tBD3XVsY7V/projectcss
import sty from "./PlasmicBookDemo.module.css"; // plasmic-import: 8KInyWSLUg2G/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: asyPlYJFlDD6/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: rTf5bFk2XosL/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: AG68qrrWFINq/icon

createPlasmicElementProxy;

export type PlasmicBookDemo__VariantMembers = {};
export type PlasmicBookDemo__VariantsArgs = {};
type VariantPropType = keyof PlasmicBookDemo__VariantsArgs;
export const PlasmicBookDemo__VariantProps = new Array<VariantPropType>();

export type PlasmicBookDemo__ArgsType = {};
type ArgPropType = keyof PlasmicBookDemo__ArgsType;
export const PlasmicBookDemo__ArgProps = new Array<ArgPropType>();

export type PlasmicBookDemo__OverridesType = {
  root?: Flex__<"div">;
  bookDemoNav?: Flex__<typeof Navbar>;
  h1?: Flex__<"h1">;
  foreground?: Flex__<"div">;
};

export interface DefaultBookDemoProps { }

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch { }
  return undefined;
}

function PlasmicBookDemo__RenderFunc(props: {
  variants: PlasmicBookDemo__VariantsArgs;
  args: PlasmicBookDemo__ArgsType;
  overrides: PlasmicBookDemo__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsxsFgrn3KpJ7Z()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Navbar
            data-plasmic-name={"bookDemoNav"}
            data-plasmic-override={overrides.bookDemoNav}
            className={classNames("__wab_instance", sty.bookDemoNav)}
          />

          <h1
            data-plasmic-name={"h1"}
            data-plasmic-override={overrides.h1}
            className={classNames(
              projectcss.all,
              projectcss.h1,
              projectcss.__wab_text,
              sty.h1
            )}
          >
            {"Get started by booking a demo slot with us "}
          </h1>
          <Button
            className={classNames("__wab_instance", sty.button__ea16P)}
            link={"https://calendly.com/adityapainuli2004/30min"}
          >
            {"Book a demo with us"}
          </Button>
          <div className={classNames(projectcss.all, sty.freeBox___0Jus8)}>
            <div className={classNames(projectcss.all, sty.freeBox__mKd4)} />

            <Stack__
              as={"div"}
              data-plasmic-name={"foreground"}
              data-plasmic-override={overrides.foreground}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__rqdcB)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__sBqb6)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mwkNl
                    )}
                  >
                    {"Pricing plans"}
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vnIb
                  )}
                >
                  {
                    "Here you can see all our pricing plans and decide what suits you the best overall. Feel free to consult our sales team to choose pick one of your own customized plan according to your needs."
                  }
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__pSyEu)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__mZ3V)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___7MtR)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uoH6F
                      )}
                    >
                      {"Starter"}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__zvow2)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__cUAdU
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__smVjx
                          )}
                        >
                          {"$"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__yPdT
                          )}
                        >
                          {"8"}
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___2SuFl
                        )}
                      >
                        {"/month"}
                      </div>
                    </Stack__>
                  </Stack__>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__mhzwj)}
                  />

                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__vygEi)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__gV6V3)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__w8O7X
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__rwGGq
                          )}
                        >
                          <Icon2Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__lwk2C
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___3PgLk
                            )}
                          >
                            <Icon2Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg___2NKa7
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__kR872
                          )}
                        >
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__zvEoe
                              )}
                            >
                              {"Label"}
                            </div>
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__nVmfu
                            )}
                          >
                            {
                              "Vestibulum mollis odio dictum ultrices facilisis molestie vestibulum"
                            }
                          </div>
                        </Stack__>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__b3Qgn
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__vsLGv
                          )}
                        >
                          <Icon2Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__qXqo
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___1UQqc
                            )}
                          >
                            <Icon2Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg___0TycS
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ypCTn
                          )}
                        >
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__sUaFa
                              )}
                            >
                              {"Label"}
                            </div>
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__npWof
                            )}
                          >
                            {"Mus consequat a justo"}
                          </div>
                        </Stack__>
                      </Stack__>
                    </Stack__>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__uUpJm
                      )}
                      endIcon={
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__ppBuy)}
                          role={"img"}
                        />
                      }
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg___1Ta)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gYnyJ
                        )}
                      >
                        {"Buy starter"}
                      </div>
                    </Button>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__yIdQh)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__swvDy)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___8Pt48
                      )}
                    >
                      {"Pro"}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__b6Epi)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__f5Ml9
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__scntu
                          )}
                        >
                          {"$"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__y6LRc
                          )}
                        >
                          {"16"}
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mbasd
                        )}
                      >
                        {"/month"}
                      </div>
                    </Stack__>
                  </Stack__>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__dLxbR)}
                  />

                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__dEEh)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ei68V)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__qVwV
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__beWqU
                          )}
                        >
                          <Icon2Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__zliHj
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___5X6Vy
                            )}
                          >
                            <Icon2Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__pq37Q
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___3VVv1
                          )}
                        >
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ie4T7
                              )}
                            >
                              {"Label"}
                            </div>
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__jbwp5
                            )}
                          >
                            {
                              "Ligula primis mollis sem dignissim semper lectus parturient"
                            }
                          </div>
                        </Stack__>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__dqUte
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__hdaYx
                          )}
                        >
                          <Icon2Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__a1V78
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__uSySs
                            )}
                          >
                            <Icon2Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg___8LE77
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__mMu8I
                          )}
                        >
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__uaUkw
                              )}
                            >
                              {"Label"}
                            </div>
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___6Nnpc
                            )}
                          >
                            {"A curabitur dignissim pharetra porta suscipit"}
                          </div>
                        </Stack__>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__x49Be
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__uvBiz
                          )}
                        >
                          <Icon2Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__cwCs0
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__t8SaQ
                            )}
                          >
                            <Icon2Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg___0Fj5Z
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___1DUHd
                          )}
                        >
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__poka8
                              )}
                            >
                              {"Label"}
                            </div>
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hzQq
                            )}
                          >
                            {
                              "Condimentum diam a et sapien praesent potenti torquent a eros"
                            }
                          </div>
                        </Stack__>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__d3EwK
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__cmWl
                          )}
                        >
                          <Icon2Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ugLhY
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__tdeBj
                            )}
                          >
                            <Icon2Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__dfcbM
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ndtMl
                          )}
                        >
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__x4XFx
                              )}
                            >
                              {"Label"}
                            </div>
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___5XcvI
                            )}
                          >
                            {"Conubia in hac eu elementum sodales"}
                          </div>
                        </Stack__>
                      </Stack__>
                    </Stack__>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__ngFcA
                      )}
                      endIcon={
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__kqaCj)}
                          role={"img"}
                        />
                      }
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___7Y2Ps
                          )}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__l8Wff
                        )}
                      >
                        {"Buy pro"}
                      </div>
                    </Button>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__oZYzB)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__eqWGz)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mSuNm
                      )}
                    >
                      {"Team"}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__geYtc)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__irmeO
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___7HGz7
                          )}
                        >
                          {"$"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__h9AVs
                          )}
                        >
                          {"10"}
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ww3Tl
                        )}
                      >
                        {"/member"}
                      </div>
                    </Stack__>
                  </Stack__>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__nvjK)}
                  />

                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___4IP7O)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__tlaw)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__i7Zoj
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__aVHfC
                          )}
                        >
                          <Icon2Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__gqGgQ
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__qYoB8
                            )}
                          >
                            <Icon2Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__p5M7K
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__gi8Eg
                          )}
                        >
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___0NaKp
                              )}
                            >
                              {"Label"}
                            </div>
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__nuNx3
                            )}
                          >
                            {"Ad nam curae a potenti platea"}
                          </div>
                        </Stack__>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___531G
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__nrnlk
                          )}
                        >
                          <Icon2Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__sunHp
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___26Do2
                            )}
                          >
                            <Icon2Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__zDo3J
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__owAa8
                          )}
                        >
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ieO8U
                              )}
                            >
                              {"Label"}
                            </div>
                          ) : null}
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__sdlvY
                            )}
                          >
                            {"A adipiscing scelerisque pretium consectetur sem"}
                          </div>
                        </Stack__>
                      </Stack__>
                    </Stack__>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button___2UIf
                      )}
                      endIcon={
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__ha1Wm)}
                          role={"img"}
                        />
                      }
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__p4Fqa)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sOzTf
                        )}
                      >
                        {"Buy team"}
                      </div>
                    </Button>
                  </Stack__>
                </div>
              </Stack__>
            </Stack__>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "bookDemoNav", "h1", "foreground"],
  bookDemoNav: ["bookDemoNav"],
  h1: ["h1"],
  foreground: ["foreground"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  bookDemoNav: typeof Navbar;
  h1: "h1";
  foreground: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicBookDemo__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicBookDemo__VariantsArgs;
    args?: PlasmicBookDemo__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicBookDemo__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
    PlasmicBookDemo__ArgsType,
    ReservedPropsType
  > &
    /* Specify overrides for each element directly as props*/ Omit<
    NodeOverridesType<T>,
    ReservedPropsType | VariantPropType | ArgPropType
  > &
    /* Specify props for the root element*/ Omit<
    Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
    ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
  >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicBookDemo__ArgProps,
          internalVariantPropNames: PlasmicBookDemo__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicBookDemo__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicBookDemo";
  } else {
    func.displayName = `PlasmicBookDemo.${nodeName}`;
  }
  return func;
}

export const PlasmicBookDemo = Object.assign(
  // Top-level PlasmicBookDemo renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    bookDemoNav: makeNodeComponent("bookDemoNav"),
    h1: makeNodeComponent("h1"),
    foreground: makeNodeComponent("foreground"),

    // Metadata about props expected for PlasmicBookDemo
    internalVariantProps: PlasmicBookDemo__VariantProps,
    internalArgProps: PlasmicBookDemo__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicBookDemo;
/* prettier-ignore-end */
